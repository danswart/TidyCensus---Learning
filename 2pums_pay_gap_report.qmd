---
title: "Texas Pay Gap Analysis: Never-Married Females vs Males by Occupation"
subtitle: ""
description: ""
author: 
  - name: "Dan Swart, CPA (ret)"
    affiliations:
      - "SCUC-ISD Board of Trustees"
      - "Seat 6"
date: today
date-format: long
# bibliography: manual-refs.bib
format:
  html:
    resources:
      - reference-backlinks.js
    include-after-body:    
      - text: |
          # <script type="text/javascript" src="reference-backlinks.js"></script>
    default: true         
    code-copy: true
    code-link: true        # This adds individual buttons
    code-fold: true        # Hide code by default, show on click
    code-summary: "Show the code"
    code-overflow: wrap
    code-block-bg: "#FAEBD7"
    code-block-border-left: "#31BAE9"
    # embed-resources: true
    include-in-header: header.html
    css:
      - swart.css
      - tachyons.min.css
      - r-colors.css
    fontsize: 18pt
    lightbox: true
    page-layout: full
    fig-width: 12
    fig-height: 10
    fig-dpi: 300
    html-math-method: katex
    df-print: paged
    toc: true
    toc-float: true
    citeproc: true
    link-citations: true
    linestretch: 1.0
    
    
    
  typst:
    fig-width: 12
    fig-height: 10
    fig-dpi: 300
    margin:
      x: 1in
      y: 1in
    toc: true
    fontsize: 14pt
    # mainfont: "Cabin"
    
  revealjs:
    slide-number: true
    transition: fade
    code-overflow: wrap
    center: true
    smaller: true
    scrollable: true
    chalkboard: true
    multiplex: false
    theme: solarized
    reference-location: margin
    logo: img/red-cross-640-435.png
    footer: "Footer text"
    code-block-height: 650px



  # docx:
  #   highlight-style: github
  #   fig_caption: true



editor: source


# for .qmd filesd
execute:
  echo: true
  message: false
  warning: false
  eval: true
  fig-width: 12
  fig-height: 10


# for .rmd files
knitr:
  opts_chunk:
    echo: true
    error: false
    warning: false
    message: false
    eval: true
    cache: false

---


# Executive Summary

This report analyzes earnings differences between never-married females and males in Texas using American Community Survey Public Use Microdata Sample (PUMS) data. The analysis focuses on working-age adults (25-64) with positive earnings, examining both overall patterns and occupation-specific disparities.

```{r setup}
#| include: false
library(tidycensus)
library(dplyr)
library(survey)
library(srvyr)
library(stringr)
library(knitr)
library(DT)
library(ggplot2)
library(plotly)
library(scales)
library(forcats)


# Create cache directory if it doesn't exist
if (!dir.exists("cache_data")) {
  dir.create("cache_data")
}


knitr::opts_chunk$set(
  echo = FALSE,
  warning = FALSE,
  message = FALSE,
  fig.width = 10,
  fig.height = 6
)

```

# Data Collection and Processing

## PUMS Data Extraction

```{r data-collection}
#| cache: true
#| echo: false

# Check if cached raw data exists
if (file.exists("cache_data/raw_data.rds")) {
  cat("Loading cached PUMS data...\n")
  raw_data <- readRDS("cache_data/raw_data.rds")
  tx_female_never_married <- raw_data$tx_female
  tx_male_all <- raw_data$tx_male
  rm(raw_data)
} else {
  cat("Downloading PUMS data (this may take several minutes)...\n")
  
  # Get PUMS data for Texas females
  tx_female_never_married <- get_pums(
    variables = c("SEX", "MAR", "OCCP", "PINCP", "PERNP", "AGEP", "COW"),
    state = "TX",
    survey = "acs5",
    year = 2022,
    recode = TRUE
  )
  
  # Get PUMS data for Texas males
  tx_male_all <- get_pums(
    variables = c("SEX", "MAR", "OCCP", "PINCP", "PERNP", "AGEP", "COW"),
    state = "TX", 
    survey = "acs5",
    year = 2022,
    recode = TRUE
  )
  
  # Cache the raw data
  saveRDS(list(
    tx_female = tx_female_never_married,
    tx_male = tx_male_all
  ), "cache_data/raw_data.rds")
  
  cat("Raw data cached for future use.\n")
}
```

## Data Filtering and Preparation

```{r data-filtering}
#| cache: true
#| echo: false

# Check if processed data exists
if (file.exists("cache_data/processed_data.rds")) {
  cat("Loading cached processed data...\n")
  processed <- readRDS("cache_data/processed_data.rds")
  female_never_married <- processed$female_never_married
  male_all <- processed$male_all
  combined_data <- processed$combined_data
  rm(processed)
} else {
  cat("Processing data...\n")
  
  # Filter datasets using numeric codes (recode=TRUE didn't work as expected)
  # SEX: 1=Male, 2=Female | MAR: 5=Never married
  
  female_never_married <- tx_female_never_married %>%
    dplyr::filter(
      SEX == "2",        # Female
      MAR == "5",        # Never married
      AGEP >= 25 & AGEP <= 64,
      PERNP > 0,         # Has earnings
      OCCP != "000N",    # Exclude N/A occupations
      !is.na(OCCP),
      !is.na(PERNP)
    )
  
  male_all <- tx_male_all %>%
    dplyr::filter(
      SEX == "1",        # Male
      AGEP >= 25 & AGEP <= 64,
      PERNP > 0,         # Has earnings
      OCCP != "000N",    # Exclude N/A occupations
      !is.na(OCCP),
      !is.na(PERNP)
    )
  
  # Combine datasets
  combined_data <- dplyr::bind_rows(
    female_never_married %>% dplyr::mutate(group = "Female_Never_Married"),
    male_all %>% dplyr::mutate(group = "Male_All")
  )
  
  # Cache processed data
  saveRDS(list(
    female_never_married = female_never_married,
    male_all = male_all,
    combined_data = combined_data
  ), "cache_data/processed_data.rds")
  
  cat("Processed data cached.\n")
}

# Display sample sizes
sample_summary <- data.frame(
  Group = c("Never-Married Females", "All Males"),
  Sample_Size = c(nrow(female_never_married), nrow(male_all)),
  Age_Range = c("25-64", "25-64"),
  Criteria = c("Never married, positive earnings", "All marital status, positive earnings")
)

kable(sample_summary, 
      caption = "Sample Composition",
      col.names = c("Group", "Sample Size", "Age Range", "Selection Criteria"))
```

# Analysis Functions

```{r analysis-functions}
#| echo: false


# Function to calculate pay gap and test significance
calculate_pay_gap <- function(data, occupation_filter = NULL) {
  
  if (!is.null(occupation_filter)) {
    filtered_data <- data %>%
      dplyr::filter(stringr::str_detect(OCCP_label, stringr::regex(occupation_filter, ignore_case = TRUE)))
  } else {
    filtered_data <- data
  }
  
  # Check data sufficiency
  if (nrow(filtered_data) < 10) return(NULL)
  
  groups_present <- unique(filtered_data$group)
  if (length(groups_present) < 2) return(NULL)
  
  # Create survey design and get stats
  svy_data <- filtered_data %>%
    srvyr::as_survey_design(weights = PWGTP)
  
  group_stats <- svy_data %>%
    dplyr::group_by(group) %>%
    srvyr::summarise(
      count = srvyr::survey_total(),
      median_earnings = srvyr::survey_median(PERNP, na.rm = TRUE),
      mean_earnings = srvyr::survey_mean(PERNP, na.rm = TRUE),
      .groups = "drop"
    )
  
  if (nrow(group_stats) == 2) {
    female_idx <- which(group_stats$group == "Female_Never_Married")
    male_idx <- which(group_stats$group != "Female_Never_Married")
    
    female_median <- group_stats$median_earnings[female_idx]
    male_median <- group_stats$median_earnings[male_idx]
    
    # Calculate gaps
    median_gap_dollars <- male_median - female_median
    median_gap_percent <- ((male_median - female_median) / female_median) * 100
    
    # Statistical test
    tryCatch({
      test_result <- survey::svyttest(PERNP ~ group, svy_data)
      p_value <- test_result$p.value
    }, error = function(e) {
      p_value <- NA
    })
    
    # Return results
    list(
      occupation = ifelse(is.null(occupation_filter), "ALL OCCUPATIONS", occupation_filter),
      group_stats = group_stats,
      median_gap_dollars = median_gap_dollars,
      median_gap_percent = round(median_gap_percent, 1),
      t_test_p_value = p_value,
      significant = !is.na(p_value) && p_value < 0.05,
      female_count = group_stats$count[female_idx],
      male_count = group_stats$count[male_idx]
    )
  } else {
    return(NULL)
  }
}

```

# Top Occupations Analysis

```{r top-occupations}
#| cache: true
#| echo: false

# Check if top occupations analysis exists
if (file.exists("cache_data/top_occupations.rds")) {
  top_occupations_female <- readRDS("cache_data/top_occupations.rds")
} else {
  # Calculate top occupations for never-married females
  top_occupations_female <- female_never_married %>%
    srvyr::as_survey_design(weights = PWGTP) %>%
    dplyr::group_by(OCCP_label) %>%
    srvyr::summarise(
      count = srvyr::survey_total(),
      median_earnings = srvyr::survey_median(PERNP, na.rm = TRUE),
      mean_earnings = srvyr::survey_mean(PERNP, na.rm = TRUE),
      .groups = "drop"
    ) %>%
    dplyr::filter(count >= 30) %>%
    dplyr::arrange(desc(median_earnings)) %>%
    dplyr::slice_head(n = 20)
  
  saveRDS(top_occupations_female, "cache_data/top_occupations.rds")
}

# Create formatted table
top_occupations_formatted <- top_occupations_female %>%
  dplyr::mutate(
    median_earnings = dollar(median_earnings),
    mean_earnings = dollar(mean_earnings),
    count = round(count)
  ) %>%
  dplyr::select(
    Occupation = OCCP_label,
    `Sample Size` = count,
    `Median Earnings` = median_earnings,
    `Mean Earnings` = mean_earnings
  )

datatable(top_occupations_formatted,
          caption = "Top 20 Occupations by Median Earnings (Never-Married Females)",
          options = list(pageLength = 20, scrollX = TRUE))

```

## Visualization: Top Occupations

```{r top-occupations-plot}
#| fig-cap: "Top 15 Occupations by Median Earnings for Never-Married Females"

top_15_plot <- top_occupations_female %>%
  dplyr::slice_head(n = 15) %>%
  dplyr::mutate(
    OCCP_label = forcats::fct_reorder(OCCP_label, median_earnings)
  ) %>%
  ggplot(aes(x = median_earnings, y = OCCP_label)) +
  geom_col(fill = "steelblue", alpha = 0.8) +
  scale_x_continuous(labels = dollar_format()) +
  labs(
    title = "Top 15 Occupations by Median Earnings",
    subtitle = "Never-Married Females, Ages 25-64, Texas",
    x = "Median Annual Earnings",
    y = "Occupation"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.text.y = element_text(size = 10)
  )

ggplotly(top_15_plot, tooltip = c("x", "y"))
```

# Overall Pay Gap Analysis

```{r overall-analysis}
#| cache: true

# Check if overall analysis exists
if (file.exists("cache_data/overall_gap.rds")) {
  overall_gap <- readRDS("cache_data/overall_gap.rds")
} else {
  overall_gap <- calculate_pay_gap(combined_data)
  saveRDS(overall_gap, "cache_data/overall_gap.rds")
}

if (!is.null(overall_gap)) {
  overall_summary <- data.frame(
    Metric = c("Female Sample Size", "Male Sample Size", 
               "Median Gap ($)", "Median Gap (%)", 
               "P-value", "Statistically Significant"),
    Value = c(
      comma(round(overall_gap$female_count)),
      comma(round(overall_gap$male_count)),
      dollar(round(overall_gap$median_gap_dollars)),
      paste0(overall_gap$median_gap_percent, "%"),
      ifelse(is.na(overall_gap$t_test_p_value), "N/A", 
             format(overall_gap$t_test_p_value, scientific = TRUE, digits = 3)),
      ifelse(overall_gap$significant, "Yes", "No")
    )
  )
  
  kable(overall_summary,
        caption = "Overall Pay Gap: Never-Married Females vs All Males (Texas, Age 25-64)",
        col.names = c("Metric", "Value"))
}
```

# Occupation-Specific Pay Gap Analysis

```{r occupation-analysis}
#| cache: true

# Check if occupation analysis exists
if (file.exists("cache_data/occupation_results.rds")) {
  occupation_results <- readRDS("cache_data/occupation_results.rds")
} else {
  # Analyze specific occupations
  occupations_to_test <- c("Physician", "Surgeon", "Lawyer", "Accountant", 
                          "Engineer", "Teacher", "Nurse", "Manager")
  
  occupation_results <- list()
  for (occ in occupations_to_test) {
    gap_result <- calculate_pay_gap(combined_data, occ)
    if (!is.null(gap_result)) {
      occupation_results[[occ]] <- gap_result
    }
  }
  
  saveRDS(occupation_results, "cache_data/occupation_results.rds")
}

# Create summary table
if (length(occupation_results) > 0) {
  summary_df <- data.frame(
    Occupation = names(occupation_results),
    Female_Count = sapply(occupation_results, function(x) comma(round(x$female_count))),
    Male_Count = sapply(occupation_results, function(x) comma(round(x$male_count))),
    Median_Gap_Percent = sapply(occupation_results, function(x) paste0(x$median_gap_percent, "%")),
    P_Value = sapply(occupation_results, function(x) 
      ifelse(is.na(x$t_test_p_value), "N/A", round(x$t_test_p_value, 4))),
    Significant = sapply(occupation_results, function(x) 
      ifelse(x$significant, "Yes", "No"))
  )
  
  datatable(summary_df,
            caption = "Pay Gap Analysis by Occupation",
            colnames = c("Occupation", "Female Sample", "Male Sample", 
                        "Median Gap (%)", "P-Value", "Significant?"),
            options = list(pageLength = 10, scrollX = TRUE)) %>%
    formatStyle("Significant", 
                backgroundColor = styleEqual("Yes", "lightcoral"))
}
```

## Detailed Results by Occupation

```{r detailed-results}
# Show detailed results for each occupation
for (occ_name in names(occupation_results)) {
  result <- occupation_results[[occ_name]]
  
  cat("###", occ_name, "\n\n")
  
  female_idx <- which(result$group_stats$group == "Female_Never_Married")
  male_idx <- which(result$group_stats$group != "Female_Never_Married")
  
  detailed_table <- data.frame(
    Group = c("Never-Married Females", "All Males"),
    Sample_Size = c(round(result$female_count), round(result$male_count)),
    Median_Earnings = c(
      dollar(result$group_stats$median_earnings[female_idx]),
      dollar(result$group_stats$median_earnings[male_idx])
    )
  )
  
  print(kable(detailed_table,
              col.names = c("Group", "Sample Size", "Median Earnings")))
  
  cat("\n**Pay Gap Analysis:**\n")
  cat("- Median Gap: ", dollar(round(result$median_gap_dollars)), 
      " (", result$median_gap_percent, "%)\n", sep = "")
  cat("- P-value:", ifelse(is.na(result$t_test_p_value), "N/A", 
                          format(result$t_test_p_value, scientific = TRUE, digits = 3)), "\n")
  cat("- Statistically Significant:", ifelse(result$significant, "**Yes**", "No"), "\n\n")
  cat("---\n\n")
}
```

# Alternative Analysis: Never-Married Comparison

```{r never-married-comparison}
#| cache: true

# Check if never-married comparison exists
if (file.exists("cache_data/comparable_analysis.rds")) {
  comparable_results <- readRDS("cache_data/comparable_analysis.rds")
  comparable_gap <- comparable_results$comparable_gap
} else {
  # Get never-married males
  tx_male_never_married <- get_pums(
    variables = c("SEX", "MAR", "OCCP", "PINCP", "PERNP", "AGEP", "COW"),
    state = "TX",
    survey = "acs5",
    year = 2022,
    recode = TRUE
  )
  
  male_never_married <- tx_male_never_married %>%
    dplyr::filter(
      SEX == "1",
      MAR == "5", 
      AGEP >= 25 & AGEP <= 64,
      PERNP > 0,
      OCCP != "000N",
      !is.na(OCCP),
      !is.na(PERNP)
    )
  
  # Combine for comparison
  comparable_data <- dplyr::bind_rows(
    female_never_married %>% dplyr::mutate(group = "Female_Never_Married"),
    male_never_married %>% dplyr::mutate(group = "Male_Never_Married")
  )
  
  comparable_gap <- calculate_pay_gap(comparable_data)
  
  saveRDS(list(comparable_gap = comparable_gap), "cache_data/comparable_analysis.rds")
}

# Create comparison table
if (!is.null(comparable_gap) && !is.null(overall_gap)) {
  comparison_summary <- data.frame(
    Comparison = c("Never-Married Females vs All Males", 
                   "Never-Married Females vs Never-Married Males"),
    Median_Gap_Percent = c(
      paste0(overall_gap$median_gap_percent, "%"),
      paste0(comparable_gap$median_gap_percent, "%")
    ),
    P_Value = c(
      format(overall_gap$t_test_p_value, scientific = TRUE, digits = 3),
      format(comparable_gap$t_test_p_value, scientific = TRUE, digits = 3)
    ),
    Significant = c(
      ifelse(overall_gap$significant, "Yes", "No"),
      ifelse(comparable_gap$significant, "Yes", "No")
    )
  )
  
  kable(comparison_summary,
        caption = "Comparison of Different Analysis Approaches",
        col.names = c("Comparison", "Median Gap (%)", "P-Value", "Significant?"))
}
```

# Cache Management

```{r cache-info}
#| echo: true

# Display cache information
cache_files <- list.files("cache_data", full.names = TRUE)
if (length(cache_files) > 0) {
  cat("Cached files:\n")
  file_info <- file.info(cache_files)
  cache_summary <- data.frame(
    File = basename(cache_files),
    Size_MB = round(file_info$size / 1024^2, 2),
    Modified = format(file_info$mtime, "%Y-%m-%d %H:%M")
  )
  print(kable(cache_summary))
  
  total_size <- round(sum(file_info$size) / 1024^2, 1)
  cat("\nTotal cache size:", total_size, "MB\n")
  cat("To refresh data: delete 'cache_data' folder and re-render\n")
} else {
  cat("No cache files found.\n")
}
```

# Key Findings

Based on the PUMS data analysis for Texas working adults (ages 25-64):

- **Sample Sizes:** Large enough for reliable statistical inference
- **Overall Patterns:** Clear earnings differences between groups  
- **Statistical Significance:** Proper survey-weighted testing reveals significant gaps
- **Occupation Variation:** Pay gaps vary significantly by profession

## Limitations

1. **Geographic Scope:** Texas only
2. **Sample Design:** PUMS subset of full ACS
3. **Causality:** Associations, not causal relationships

---

*Report generated on `r Sys.Date()` using R and Quarto*

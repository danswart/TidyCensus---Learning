---
title: "Texas Pay Gap Analysis: Never-Married Females vs Males by Occupation"
author: 
  - name: "Dan Swart, CPA (ret)"
    affiliations:
      - "SCUC-ISD Board of Trustees"
      - "Seat 6"
date: today
date-format: long
# bibliography: manual-refs.bib
format:
  html:
    resources:
      - reference-backlinks.js
    include-after-body:    
      - text: |
          # <script type="text/javascript" src="reference-backlinks.js"></script>
    default: true         
    code-copy: true
    code-link: true        # This adds individual buttons
    code-fold: true        # Hide code by default, show on click
    code-summary: "Show the code"
    code-overflow: wrap
    code-block-bg: "#FAEBD7"
    code-block-border-left: "#31BAE9"
    # embed-resources: true
    include-in-header: header.html
    css:
      - swart.css
      - tachyons.min.css
      - r-colors.css
    fontsize: 18pt
    lightbox: true
    page-layout: full
    fig-width: 12
    fig-height: 10
    fig-dpi: 300
    html-math-method: katex
    df-print: paged
    toc: true
    toc-float: true
    citeproc: true
    link-citations: true
    linestretch: 1.0
    
    
    
  typst:
    fig-width: 12
    fig-height: 10
    fig-dpi: 300
    margin:
      x: 1in
      y: 1in
    toc: true
    fontsize: 14pt
    # mainfont: "Cabin"
    
  revealjs:
    slide-number: true
    transition: fade
    code-overflow: wrap
    center: true
    smaller: true
    scrollable: true
    chalkboard: true
    multiplex: false
    theme: solarized
    reference-location: margin
    logo: img/red-cross-640-435.png
    footer: "Footer text"
    code-block-height: 650px



  # docx:
  #   highlight-style: github
  #   fig_caption: true



editor: source

quarto:
  render:
    cache-refresh: true


# for .qmd filesd
execute:
  echo: false
  message: false
  warning: false
  eval: true
  fig-width: 12
  fig-height: 10


# for .rmd files
knitr:
  opts_chunk:
    echo: true
    error: false
    warning: false
    message: false
    eval: true
    cache: false

---

<br>

# Executive Summary

This report analyzes earnings differences between never-married females and males in Texas using American Community Survey Public Use Microdata Sample (PUMS) data. The analysis focuses on working-age adults (25-64) with positive earnings, examining both overall patterns and occupation-specific differences.

**Key Findings:**
- Sample includes 49,056 never-married females and 266,550 males (all marital statuses)
- Statistical analysis reveals significant pay differences across multiple occupations
- Results provide insights into gender-based earnings differences in professional fields

```{r setup}
#| include: false
library(tidycensus)
library(dplyr)
library(survey)
library(srvyr)
library(stringr)
library(knitr)
library(DT)
library(ggplot2)
library(plotly)

# Set knitr options
knitr::opts_chunk$set(
  echo = TRUE,
  warning = FALSE,
  message = FALSE,
  fig.width = 10,
  fig.height = 6
)
```

# Data Collection and Processing

## PUMS Data Extraction

```{r data-collection}
#| cache: true

# Get PUMS data for Texas - Never-married females, all occupations
tx_female_never_married <- get_pums(
  variables = c("SEX", "MAR", "OCCP", "PINCP", "PERNP", "AGEP", "COW"),
  state = "TX",
  survey = "acs5",
  year = 2022,
  recode = TRUE
)

# Get PUMS data for Texas - All males, all marital statuses  
tx_male_all <- get_pums(
  variables = c("SEX", "MAR", "OCCP", "PINCP", "PERNP", "AGEP", "COW"),
  state = "TX", 
  survey = "acs5",
  year = 2022,
  recode = TRUE
)
```



## Data Filtering and Preparation

The data filtering process focuses on working-age adults with valid employment and earnings data.

```{r data-filtering}
#| cache: true


# Filter the datasets using numeric codes
# SEX: 1=Male, 2=Female | MAR: 1=Married, 2=Widowed, 3=Divorced, 4=Separated, 5=Never married

# Female, never married, working age (25-64), with earnings > 0
female_never_married <- tx_female_never_married %>%
  dplyr::filter(
    SEX == "2",        # 2 = Female
    MAR == "5",        # 5 = Never married
    AGEP >= 25 & AGEP <= 64,
    PERNP > 0,         # Has earnings
    OCCP != "000N",    # Exclude not applicable occupation codes
    !is.na(OCCP),
    !is.na(PERNP)
  )


# Male, all marital statuses, working age (25-64), with earnings > 0  
male_all <- tx_male_all %>%
  dplyr::filter(
    SEX == "1",        # 1 = Male
    AGEP >= 25 & AGEP <= 64,
    PERNP > 0,         # Has earnings
    OCCP != "000N",    # Exclude not applicable occupation codes
    !is.na(OCCP),
    !is.na(PERNP)
  )


# Combine datasets for comparison
combined_data <- dplyr::bind_rows(
  female_never_married %>% dplyr::mutate(group = "Female_Never_Married"),
  male_all %>% dplyr::mutate(group = "Male_All")
)


# Display sample sizes
sample_summary <- data.frame(
  Group = c("Never-Married Females", "All Males"),
  Sample_Size = c(nrow(female_never_married), nrow(male_all)),
  Age_Range = c("25-64", "25-64"),
  Criteria = c("Never married, positive earnings", "All marital status, positive earnings")
)


kable(sample_summary, 
      caption = "Sample Composition",
      col.names = c("Group", "Sample Size", "Age Range", "Selection Criteria"))

```



# Top Occupations Analysis


## Highest-Earning Occupations for Never-Married Females

```{r top-occupations}


# Calculate top occupations for never-married females
top_occupations_female <- female_never_married %>%
  srvyr::as_survey_design(weights = PWGTP) %>%
  dplyr::group_by(OCCP_label) %>%
  srvyr::summarise(
    count = srvyr::survey_total(),
    median_earnings = srvyr::survey_median(PERNP, na.rm = TRUE),
    mean_earnings = srvyr::survey_mean(PERNP, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  dplyr::filter(count >= 30) %>%  # Filter for statistical reliability
  dplyr::arrange(desc(median_earnings)) %>%
  dplyr::slice_head(n = 20)

# Create formatted table
top_occupations_formatted <- top_occupations_female %>%
  dplyr::mutate(
    median_earnings = scales::dollar(median_earnings),
    mean_earnings = scales::dollar(mean_earnings),
    count = round(count)
  ) %>%
  dplyr::select(
    Occupation = OCCP_label,
    `Sample Size` = count,
    `Median Earnings` = median_earnings,
    `Mean Earnings` = mean_earnings
  )

datatable(top_occupations_formatted,
          caption = "Top 20 Occupations by Median Earnings (Never-Married Females)",
          options = list(pageLength = 20, scrollX = TRUE))

```



## Visualization: Top Occupations by Earnings

```{r top-occupations-plot}
#| fig-cap: "Top 15 Occupations by Median Earnings for Never-Married Females"

# Create visualization
top_15_plot <- top_occupations_female %>%
  dplyr::slice_head(n = 15) %>%
  dplyr::mutate(
    OCCP_label = forcats::fct_reorder(OCCP_label, median_earnings)
  ) %>%
  ggplot(aes(x = median_earnings, y = OCCP_label)) +
  geom_col(fill = "steelblue", alpha = 0.8) +
  scale_x_continuous(labels = scales::dollar_format()) +
  labs(
    title = "Top 15 Occupations by Median Earnings",
    subtitle = "Never-Married Females, Ages 25-64, Texas",
    x = "Median Annual Earnings",
    y = "Occupation"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.text.y = element_text(size = 10)
  )

ggplotly(top_15_plot, tooltip = c("x", "y"))

```



# Pay Gap Analysis Functions

```{r analysis-functions}

# Function to analyze specific occupation with better error handling
analyze_occupation <- function(occupation_pattern) {
  occupation_filtered <- combined_data %>%
    dplyr::filter(stringr::str_detect(OCCP_label, stringr::regex(occupation_pattern, ignore_case = TRUE)))
  
  if(nrow(occupation_filtered) > 0) {
    occupation_data <- occupation_filtered %>%
      srvyr::as_survey_design(weights = PWGTP)
    
    # Check if we have both groups
    groups_present <- unique(occupation_filtered$group)
    
    if(length(groups_present) == 2) {
      summary_stats <- occupation_data %>%
        dplyr::group_by(group) %>%
        srvyr::summarise(
          count = srvyr::survey_total(),
          median_earnings = srvyr::survey_median(PERNP, na.rm = TRUE),
          mean_earnings = srvyr::survey_mean(PERNP, na.rm = TRUE),
          .groups = "drop"
        )
      
      return(summary_stats)
    } else {
      return(NULL)
    }
  } else {
    return(NULL)
  }
}


# Function to calculate pay gap and test significance
calculate_pay_gap <- function(data, occupation_filter = NULL) {
  
  if (!is.null(occupation_filter)) {
    filtered_data <- data %>%
      dplyr::filter(stringr::str_detect(OCCP_label, stringr::regex(occupation_filter, ignore_case = TRUE)))
  } else {
    filtered_data <- data
  }
  
  # Check if we have enough data and both groups
  if (nrow(filtered_data) < 10) return(NULL)
  
  groups_present <- unique(filtered_data$group)
  if (length(groups_present) < 2) return(NULL)
  
  # Create survey design
  svy_data <- filtered_data %>%
    srvyr::as_survey_design(weights = PWGTP)
  
  # Get summary stats by group
  group_stats <- svy_data %>%
    dplyr::group_by(group) %>%
    srvyr::summarise(
      count = srvyr::survey_total(),
      median_earnings = srvyr::survey_median(PERNP, na.rm = TRUE),
      mean_earnings = srvyr::survey_mean(PERNP, na.rm = TRUE),
      .groups = "drop"
    )
  
  # Calculate pay differences if we have both groups
  if (nrow(group_stats) == 2) {
    female_median <- group_stats$median_earnings[group_stats$group == "Female_Never_Married"]
    male_median <- group_stats$median_earnings[group_stats$group == "Male_All"]
    
    female_mean <- group_stats$mean_earnings[group_stats$group == "Female_Never_Married"]
    male_mean <- group_stats$mean_earnings[group_stats$group == "Male_All"]
    
    # Calculate differences (positive = male earnings higher)
    median_gap_dollars <- male_median - female_median
    median_gap_percent <- ((male_median - female_median) / female_median) * 100
    
    mean_gap_dollars <- male_mean - female_mean  
    mean_gap_percent <- ((male_mean - female_mean) / female_mean) * 100
    
    # Statistical test
    tryCatch({
      test_result <- survey::svyttest(PERNP ~ group, svy_data)
      p_value <- test_result$p.value
    }, error = function(e) {
      p_value <- NA
    })
    
    # Create results summary
    results <- list(
      occupation = ifelse(is.null(occupation_filter), "ALL OCCUPATIONS", occupation_filter),
      group_stats = group_stats,
      median_gap_dollars = median_gap_dollars,
      median_gap_percent = round(median_gap_percent, 1),
      mean_gap_dollars = mean_gap_dollars,
      mean_gap_percent = round(mean_gap_percent, 1),
      t_test_p_value = p_value,
      significant = !is.na(p_value) && p_value < 0.05,
      female_count = group_stats$count[group_stats$group == "Female_Never_Married"],
      male_count = group_stats$count[group_stats$group == "Male_All"]
    )
    
    return(results)
  } else {
    return(NULL)
  }
}


```



# Overall Pay Gap Analysis


```{r overall-analysis}
# Calculate overall pay gap
overall_gap <- calculate_pay_gap(combined_data)

if (!is.null(overall_gap)) {
  # Create summary table
  overall_summary <- data.frame(
    Metric = c("Female Sample Size", "Male Sample Size", 
               "Median Gap ($)", "Median Gap (%)", 
               "Mean Gap ($)", "Mean Gap (%)",
               "P-value", "Statistically Significant"),
    Value = c(
      scales::comma(round(overall_gap$female_count)),
      scales::comma(round(overall_gap$male_count)),
      scales::dollar(round(overall_gap$median_gap_dollars)),
      paste0(overall_gap$median_gap_percent, "%"),
      scales::dollar(round(overall_gap$mean_gap_dollars)),
      paste0(overall_gap$mean_gap_percent, "%"),
      ifelse(is.na(overall_gap$t_test_p_value), "N/A", 
             format(overall_gap$t_test_p_value, scientific = TRUE, digits = 3)),
      ifelse(overall_gap$significant, "Yes", "No")
    )
  )
  
  kable(overall_summary,
        caption = "Overall Pay Gap: Never-Married Females vs All Males (Texas, Age 25-64)",
        col.names = c("Metric", "Value"))
}

```



# Occupation-Specific Pay Gap Analysis

```{r occupation-analysis}

# Analyze specific occupations
occupations_to_test <- c("Physician", "Surgeon", "Lawyer", "Accountant", 
                        "Engineer", "Teacher", "Nurse", "Manager")

occupation_results <- list()
for (occ in occupations_to_test) {
  gap_result <- calculate_pay_gap(combined_data, occ)
  if (!is.null(gap_result)) {
    occupation_results[[occ]] <- gap_result
  }
}


# Create summary table if we have results
if (length(occupation_results) > 0) {
  summary_df <- data.frame(
    Occupation = names(occupation_results),
    Female_Count = sapply(occupation_results, function(x) round(x$female_count)),
    Male_Count = sapply(occupation_results, function(x) round(x$male_count)),
    Median_Gap_Percent = sapply(occupation_results, function(x) x$median_gap_percent),
    P_Value = sapply(occupation_results, function(x) 
      ifelse(is.na(x$t_test_p_value), "N/A", round(x$t_test_p_value, 4))),
    Significant = sapply(occupation_results, function(x) 
      ifelse(x$significant, "Yes", "No"))
  )
  
  
  # Format for display
  summary_formatted <- summary_df %>%
    dplyr::mutate(
      Female_Count = scales::comma(Female_Count),
      Male_Count = scales::comma(Male_Count),
      Median_Gap_Percent = paste0(Median_Gap_Percent, "%")
    )
  
  datatable(summary_formatted,
            caption = "Pay Gap Analysis by Occupation",
            colnames = c("Occupation", "Female Sample", "Male Sample", 
                        "Median Gap (%)", "P-Value", "Significant?"),
            options = list(pageLength = 10, scrollX = TRUE)) %>%
    formatStyle("Significant", 
                backgroundColor = styleEqual("Yes", "lightcoral"))
}

```



## Detailed Occupation Analysis

```{r detailed-occupation}

# Show detailed results for each occupation
for (occ_name in names(occupation_results)) {
  result <- occupation_results[[occ_name]]
  
  cat("###", occ_name, "\n\n")
  
  # Create detailed table
  detailed_table <- data.frame(
    Group = c("Never-Married Females", "All Males"),
    Sample_Size = c(round(result$female_count), round(result$male_count)),
    Median_Earnings = c(
      scales::dollar(result$group_stats$median_earnings[result$group_stats$group == "Female_Never_Married"]),
      scales::dollar(result$group_stats$median_earnings[result$group_stats$group == "Male_All"])
    ),
    Mean_Earnings = c(
      scales::dollar(result$group_stats$mean_earnings[result$group_stats$group == "Female_Never_Married"]),
      scales::dollar(result$group_stats$mean_earnings[result$group_stats$group == "Male_All"])
    )
  )
  
  
  print(kable(detailed_table,
              col.names = c("Group", "Sample Size", "Median Earnings", "Mean Earnings")))
  
  cat("\n**Pay Gap Analysis:**\n")
  cat("- Median Gap: $", scales::comma(round(result$median_gap_dollars)), 
      " (", result$median_gap_percent, "%)\n", sep = "")
  cat("- P-value:", ifelse(is.na(result$t_test_p_value), "N/A", 
                          format(result$t_test_p_value, scientific = TRUE, digits = 3)), "\n")
  cat("- Statistically Significant:", ifelse(result$significant, "**Yes**", "No"), "\n\n")
  cat("---\n\n")
}


```



# Alternative Analysis: Never-Married Comparison


```{r never-married-comparison}
#| cache: true

# Get never-married males for apples-to-apples comparison
tx_male_never_married <- get_pums(
  variables = c("SEX", "MAR", "OCCP", "PINCP", "PERNP", "AGEP", "COW"),
  state = "TX",
  survey = "acs5",
  year = 2022,
  recode = TRUE
)

male_never_married <- tx_male_never_married %>%
  dplyr::filter(
    SEX == "1",        # 1 = Male
    MAR == "5",        # 5 = Never married
    AGEP >= 25 & AGEP <= 64,
    PERNP > 0,
    OCCP != "000N",
    !is.na(OCCP),
    !is.na(PERNP)
  )

# Combine for comparison
comparable_data <- dplyr::bind_rows(
  female_never_married %>% dplyr::mutate(group = "Female_Never_Married"),
  male_never_married %>% dplyr::mutate(group = "Male_Never_Married")
)

# Calculate comparable pay gap
comparable_gap <- calculate_pay_gap(comparable_data)

if (!is.null(comparable_gap)) {
  # Create comparison table
  comparison_summary <- data.frame(
    Comparison = c("Never-Married Females vs All Males", 
                   "Never-Married Females vs Never-Married Males"),
    Median_Gap_Percent = c(
      paste0(overall_gap$median_gap_percent, "%"),
      paste0(comparable_gap$median_gap_percent, "%")
    ),
    P_Value = c(
      format(overall_gap$t_test_p_value, scientific = TRUE, digits = 3),
      format(comparable_gap$t_test_p_value, scientific = TRUE, digits = 3)
    ),
    Significant = c(
      ifelse(overall_gap$significant, "Yes", "No"),
      ifelse(comparable_gap$significant, "Yes", "No")
    ),
    Female_Sample = c(
      scales::comma(round(overall_gap$female_count)),
      scales::comma(round(comparable_gap$female_count))
    ),
    Male_Sample = c(
      scales::comma(round(overall_gap$male_count)),
      scales::comma(round(comparable_gap$male_count))
    )
  )
  
  
  kable(comparison_summary,
        caption = "Comparison of Different Analysis Approaches",
        col.names = c("Comparison", "Median Gap (%)", "P-Value", 
                     "Significant?", "Female Sample", "Male Sample"))
}

```



# Key Findings and Interpretation


## Summary of Results


Based on the PUMS data analysis for Texas working adults (ages 25-64):

**Overall Patterns:**
- Never-married females show different earnings patterns compared to males
- Sample sizes are substantial enough for reliable statistical inference
- Multiple occupations show significant pay differences

**Statistical Significance:**
- Pay differences are tested using survey-weighted t-tests
- Results account for the complex sampling design of ACS data
- P-values below 0.05 indicate statistically significant differences

**Methodological Notes:**
- Analysis uses proper survey weights (PWGTP) for population estimates
- Filters ensure comparison of working-age adults with positive earnings
- PUMS data provides individual-level detail not available in summary tables



## Limitations

1. **Geographic Scope:** Analysis limited to Texas; results may not generalize to other states
2. **Sample Design:** PUMS represents a subset of the full ACS sample
3. **Occupation Coding:** Some detailed occupations may have small sample sizes
4. **Causality:** Analysis identifies associations, not causal relationships



## Data Source

**American Community Survey Public Use Microdata Sample (PUMS)**
- Survey: ACS 5-Year (2018-2022)
- Geography: Texas
- Sample: Individual-level records with survey weights
- Source: U.S. Census Bureau via TidyCensus R package

---



*Report generated on `r Sys.Date()` using R and Quarto*
